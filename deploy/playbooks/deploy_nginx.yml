---

- name: Setup Nginx reverse proxy
  hosts: dev, prod
  tasks:
    - file:
        path: /etc/nginx/{{ item }}
        state: directory
        recurse: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      with_items:
        - certs
        - dhparam
        - vhost.d
      become: yes

    - name: Sync Nginx info
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      with_items:
        - { src: ../files/nginx/vhost.d/, dest: /etc/nginx/vhost.d/ }

    - name: Generate default.crt and default.key
      shell: >
        openssl req -x509 -nodes
        -days 3650
        -subj "/C=SE/ST=./L=./O=./CN=*"
        -newkey rsa:2048
        -keyout /etc/nginx/certs/default.key
        -out /etc/nginx/certs/default.crt
      args:
        creates: /etc/nginx/certs/default.crt

    - name: Generate dummy cert for use between server and cloudflare
      shell: >
        openssl req -x509 -nodes
        -days 3650
        -subj "/C=SE/ST=./L=./O=./CN=*"
        -newkey rsa:2048
        -keyout /etc/nginx/certs/"{{ DOMAIN_NAME }}".key
        -out /etc/nginx/certs/"{{ DOMAIN_NAME }}".crt
      args:
        creates: /etc/nginx/certs/"{{ DOMAIN_NAME }}".crt

    - name: Generate default Diffie Hellman param
      shell: openssl dhparam -out /etc/nginx/dhparam/dhparam.pem 2048
      args:
        creates: /etc/nginx/dhparam/dhparam.pem

    - name: Start nginx container
      docker_container:
        name: nginx-gen
        image: jwilder/nginx-proxy
        ports:
          - "80:80"
          - "443:443"
        volumes:
          - "static_files:{{ django_env.STATIC_ROOT }}:ro"
          - "/etc/nginx/vhost.d:/etc/nginx/vhost.d"
          - "/etc/nginx/certs/:/etc/nginx/certs/:ro"
          - "/etc/nginx/dhparam/dhparam.pem:/etc/nginx/dhparam/dhparam.pem:ro"
          - "/var/run/docker.sock:/tmp/docker.sock:ro"
          - "/var/www/frontend:/var/www/frontend:ro"
        env:
          NGINX_DOCKER_GEN_CONTAINER: nginx-gen
        restart_policy: unless-stopped
        log_driver: local
        networks_cli_compatible: yes
        networks:
          - name: "{{ DOCKER_NETWORK_NAME }}"
      tags:
        - deploy
        - nginx
